use crate::class_file::bytecode::Instruction;
use crate::vm::rcodes::RCode::{NOP, ArrayLoad, ArrayStore, PushConst, LoadLocalVar, Return, StoreLocalVar, GetStaticField, InvokeVirtual, InvokeSpecial};
use crate::vm::types::{JavaType, Literal};
use crate::vm::types::JavaType::{Reference, Byte, Char, Void};
use crate::vm::types::Literal::{NullReference, Integer};

pub enum RCode {
    ArrayLoad(JavaType),
    ArrayStore(JavaType),
    PushConst(Literal),
    LoadLocalVar(JavaType, u8),
    StoreLocalVar(JavaType, u8),
    GetField(u16),
    GetStaticField(u16),
    InvokeSpecial(u16),
    InvokeVirtual(u16),
    Return(JavaType),
    NOP,
}

impl From<&Instruction> for RCode {
    fn from(instr: &Instruction) -> Self {
        match instr {
            Instruction::AALoad => ArrayLoad(Reference),
            Instruction::AAStore => ArrayStore(Reference),
            Instruction::AConstNull => PushConst(NullReference),
            Instruction::ALoad(x) => LoadLocalVar(Reference, *x),
            Instruction::ANewArray(_) => NOP,
            Instruction::AReturn => Return(Reference),
            Instruction::ArrayLength => NOP,
            Instruction::AStore(x) => StoreLocalVar(Reference, *x),
            Instruction::AThrow => NOP,
            Instruction::BALoad => ArrayLoad(Byte),
            Instruction::BAStore => ArrayStore(Byte),
            Instruction::BIPush(_) => NOP,
            Instruction::Breakpoint => NOP,
            Instruction::CALoad => ArrayLoad(Char),
            Instruction::CAStore => ArrayStore(Char),
            Instruction::Checkcast(_) => NOP,
            Instruction::D2F => NOP,
            Instruction::D2I => NOP,
            Instruction::D2L => NOP,
            Instruction::DAdd => NOP,
            Instruction::DALoad => NOP,
            Instruction::DAStore => NOP,
            Instruction::DCmpG => NOP,
            Instruction::DCmpL => NOP,
            Instruction::DConst_0 => NOP,
            Instruction::DConst_1 => NOP,
            Instruction::DDiv => NOP,
            Instruction::DLoad(_) => NOP,
            Instruction::DMul => NOP,
            Instruction::DNeg => NOP,
            Instruction::DRem => NOP,
            Instruction::DReturn => NOP,
            Instruction::DStore(_) => NOP,
            Instruction::DSub => NOP,
            Instruction::Dup => NOP,
            Instruction::Dup_x1 => NOP,
            Instruction::Dup_x2 => NOP,
            Instruction::Dup2 => NOP,
            Instruction::Dup2_x1 => NOP,
            Instruction::Dup2_x2 => NOP,
            Instruction::F2D => NOP,
            Instruction::FSI => NOP,
            Instruction::F2L => NOP,
            Instruction::FAdd => NOP,
            Instruction::FAload => NOP,
            Instruction::FAstore => NOP,
            Instruction::FCmpG => NOP,
            Instruction::FCmpL => NOP,
            Instruction::FConst_0 => NOP,
            Instruction::FConst_1 => NOP,
            Instruction::FConst_2 => NOP,
            Instruction::FDiv => NOP,
            Instruction::FLoad(_) => NOP,
            Instruction::FMul => NOP,
            Instruction::FNeg => NOP,
            Instruction::FRem => NOP,
            Instruction::FReturn => NOP,
            Instruction::FStore(_) => NOP,
            Instruction::FSub => NOP,
            Instruction::GetField(_) => NOP,
            Instruction::GetStatic(x) => GetStaticField(*x),
            Instruction::Goto(_) => NOP,
            Instruction::Goto_w(_) => NOP,
            Instruction::I2B => NOP,
            Instruction::I2C => NOP,
            Instruction::I2D => NOP,
            Instruction::I2F => NOP,
            Instruction::I2L => NOP,
            Instruction::I2S => NOP,
            Instruction::IAdd => NOP,
            Instruction::IALoad => NOP,
            Instruction::IAnd => NOP,
            Instruction::IAstore => NOP,
            Instruction::IConst_m1 => NOP,
            Instruction::IConst_0 => PushConst(Integer(0)),
            Instruction::IConst_1 => PushConst(Integer(1)),
            Instruction::IConst_2 => PushConst(Integer(2)),
            Instruction::IConst_3 => PushConst(Integer(3)),
            Instruction::IConst_4 => PushConst(Integer(4)),
            Instruction::IConst_5 => PushConst(Integer(5)),
            Instruction::IDiv => NOP,
            Instruction::IfACmpEq(_) => NOP,
            Instruction::IfACmpNe(_) => NOP,
            Instruction::IfICmpEq(_) => NOP,
            Instruction::IfICmpGe(_) => NOP,
            Instruction::IfICmpGt(_) => NOP,
            Instruction::IfICmpLe(_) => NOP,
            Instruction::IfICmpLt(_) => NOP,
            Instruction::IfICmpNe(_) => NOP,
            Instruction::IfEq(_) => NOP,
            Instruction::IfGe(_) => NOP,
            Instruction::IfGt(_) => NOP,
            Instruction::IfLe(_) => NOP,
            Instruction::IfLt(_) => NOP,
            Instruction::IfNe(_) => NOP,
            Instruction::IfNonNull(_) => NOP,
            Instruction::IfNull(_) => NOP,
            Instruction::IInc(_, _) => NOP,
            Instruction::ILoad(_) => NOP,
            Instruction::IMul => NOP,
            Instruction::INeg => NOP,
            Instruction::InstanceOf(_) => NOP,
            Instruction::InvokeDynamic(_, _) => NOP,
            Instruction::InvokeInterface(_, _) => NOP,
            Instruction::InvokeSpecial(x) => InvokeSpecial(*x),
            Instruction::InvokeStatic(_) => NOP,
            Instruction::InvokeVirtual(x) => InvokeVirtual(*x),
            Instruction::IOr => NOP,
            Instruction::IRem => NOP,
            Instruction::IReturn => NOP,
            Instruction::IShL => NOP,
            Instruction::IShR => NOP,
            Instruction::IStore(_) => NOP,
            Instruction::ISub => NOP,
            Instruction::IUShR => NOP,
            Instruction::IXor => NOP,
            Instruction::JSr(_, _) => NOP,
            Instruction::JSr_w(_, _) => NOP,
            Instruction::L2D => NOP,
            Instruction::L2F => NOP,
            Instruction::L2I => NOP,
            Instruction::LAdd => NOP,
            Instruction::LALoad => NOP,
            Instruction::LanD => NOP,
            Instruction::LAStore => NOP,
            Instruction::LCmp => NOP,
            Instruction::LConst_0 => NOP,
            Instruction::LConst_1 => NOP,
            Instruction::LdC(_) => NOP,
            Instruction::LdC_w(_) => NOP,
            Instruction::LdC2_w(_) => NOP,
            Instruction::LDiv => NOP,
            Instruction::LLoad(_) => NOP,
            Instruction::LMul => NOP,
            Instruction::LNeg => NOP,
            Instruction::LOr => NOP,
            Instruction::LRem => NOP,
            Instruction::LReturn => NOP,
            Instruction::LShL => NOP,
            Instruction::LShR => NOP,
            Instruction::LStore(_) => NOP,
            Instruction::LSub => NOP,
            Instruction::LUShR => NOP,
            Instruction::LXor => NOP,
            Instruction::MonitorEnter => NOP,
            Instruction::MonitorExit => NOP,
            Instruction::MultiANewArray(_, _) => NOP,
            Instruction::New(_) => NOP,
            Instruction::NewArray(_) => NOP,
            Instruction::Nop => NOP,
            Instruction::Pop => NOP,
            Instruction::Pop2 => NOP,
            Instruction::Putfield(_) => NOP,
            Instruction::PutStatic(_) => NOP,
            Instruction::Ret(_) => NOP,
            Instruction::Return => Return(Void),
            Instruction::SALoad => NOP,
            Instruction::SAStore => NOP,
            Instruction::SIPush(_) => NOP,
            Instruction::Swap => NOP,
        }
    }
}